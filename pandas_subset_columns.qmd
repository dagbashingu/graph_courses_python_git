# Subsetting columns


# Imports


```{python}
import pandas as pd
```

# Dataset


```{python}
yao = pd.read_csv("Data/yaounde_data.csv")
yao
```

# Selecting columns with square brackets


```{python}
yao[["age","sex"]]
```

```{python}
yao["age"]
```


```{python}
yao[["age"]]
```

```{python}
yao_subset = yao[["age","sex"]]
yao_subset
```

```{python}
yao_subset = yao[["age"]]
yao_subset
```

## Practice Q: Select columns with []


```{python}
yao_weight_height = yao[["weight_kg","height_cm"]]
yao_weight_height
```

## Excluding columns with drop()

```{python}
yao.drop(columns = ["age"])
```

```{python}
yao.drop(columns = ["age","age_category"])
```

## Practice Q: Drop columns with drop()


```{python}
yao_no_education_consultation = yao.drop(columns=["highest_education","consultation"])
yao_no_education_consultation
```

## Using filter  to select columns by regex

Regex : Regular Expressions

```{python}
yao.filter(regex="ig") # Contains ig
```

```{python}
yao.filter(regex="^ig") # Starts with ig
```

```{python}
yao.filter(regex="result$") # ends with result
```

## Practice Q: Select columns begining with is_ using regex


```{python}
yao.filter(regex="^is_") # begins with is_
```

```{python}
yao.rename(columns = {"age": "patient_age", "sex": "patient_sex"})
```

## Practice Q: Renaming the age_category column to age_cat using rename()

```{python}
yao_age_cat = yao.rename(columns = {"age_category": "age_cat"})
yao_age_cat
```

## Cleaning messy column names
```{python}
test_df = pd.DataFrame (
    {"good_name": range(3),
    "bad name": range(3),
    "bad*@name*2": range(3)
    }
)
test_df
```

```{python}
test_df.columns.str.replace (r"[^a-zA-Z0-9]","_",regex=True)

```

## Overriding the original column names
```{python}
test_df.columns = test_df.columns.str.replace (r"[^a-zA-Z0-9]","_",regex=True)
test_df
```

## Practice Q: Clean column names with regex


```{python}
cleaning_practice = pd.DataFrame ({"Aloha": range(3), "Bell Chart": range(3), "Animals@the zoo": range(3)})
cleaning_practice
```

## Cleaning the column names


```{python}
cleaning_practice.columns = cleaning_practice.columns.str.replace (r"[^a-zA-Z0-9]", "_", regex=True)
cleaning_practice
```